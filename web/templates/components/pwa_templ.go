// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.906
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func PWAScript() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<script>\n\t\t// PWA Installation and Service Worker Registration\n\t\tclass PWAInstaller {\n\t\t\tconstructor() {\n\t\t\t\tthis.deferredPrompt = null;\n\t\t\t\tthis.installButton = null;\n\t\t\t\tthis.init();\n\t\t\t}\n\n\t\t\tinit() {\n\t\t\t\t// Register service worker\n\t\t\t\tthis.registerServiceWorker();\n\t\t\t\t\n\t\t\t\t// Setup install prompt handling\n\t\t\t\tthis.setupInstallPrompt();\n\t\t\t\t\n\t\t\t\t// Create install button\n\t\t\t\tthis.createInstallButton();\n\t\t\t}\n\n\t\t\tasync registerServiceWorker() {\n\t\t\t\tif ('serviceWorker' in navigator) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst registration = await navigator.serviceWorker.register('/static/sw.js');\n\t\t\t\t\t\tconsole.log('Service Worker registered successfully:', registration);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Listen for updates\n\t\t\t\t\t\tregistration.addEventListener('updatefound', () => {\n\t\t\t\t\t\t\tconst newWorker = registration.installing;\n\t\t\t\t\t\t\tnewWorker.addEventListener('statechange', () => {\n\t\t\t\t\t\t\t\tif (newWorker.state === 'installed' && navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t\t\t// New content is available, notify user\n\t\t\t\t\t\t\t\t\tthis.showUpdateNotification();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error('Service Worker registration failed:', error);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsetupInstallPrompt() {\n\t\t\t\t// Detect Firefox\n\t\t\t\tconst isFirefox = navigator.userAgent.toLowerCase().includes('firefox');\n\t\t\t\t\n\t\t\t\t// Listen for the beforeinstallprompt event (Chrome/Edge)\n\t\t\t\twindow.addEventListener('beforeinstallprompt', (e) => {\n\t\t\t\t\tconsole.log('beforeinstallprompt event fired');\n\t\t\t\t\t// Prevent the mini-infobar from appearing on mobile\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\t// Save the event so it can be triggered later\n\t\t\t\t\tthis.deferredPrompt = e;\n\t\t\t\t\t// Show the install button\n\t\t\t\t\tthis.showInstallButton();\n\t\t\t\t});\n\n\t\t\t\t// Listen for the appinstalled event\n\t\t\t\twindow.addEventListener('appinstalled', () => {\n\t\t\t\t\tconsole.log('PWA was installed');\n\t\t\t\t\tthis.hideInstallButton();\n\t\t\t\t\t// Clear the deferredPrompt\n\t\t\t\t\tthis.deferredPrompt = null;\n\t\t\t\t});\n\n\t\t\t\t// For Firefox, show the install button in mobile menu since it doesn't support beforeinstallprompt\n\t\t\t\tif (isFirefox) {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tif (!this.deferredPrompt && !window.matchMedia('(display-mode: standalone)').matches) {\n\t\t\t\t\t\t\tthis.showInstallButton(); // Show the button in mobile menu\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 2000);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcreateInstallButton() {\n\t\t\t\t// Check if already installed\n\t\t\t\tif (window.matchMedia && window.matchMedia('(display-mode: standalone)').matches) {\n\t\t\t\t\tconsole.log('PWA is already installed');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Use the mobile menu button instead of creating a floating button\n\t\t\t\tthis.installSection = document.getElementById('mobile-install-section');\n\t\t\t\tthis.installButton = document.getElementById('mobile-install-button');\n\t\t\t\t\n\t\t\t\tif (this.installButton) {\n\t\t\t\t\tthis.installButton.addEventListener('click', () => {\n\t\t\t\t\t\tthis.installPWA();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tshowInstallButton() {\n\t\t\t\tif (this.installSection) {\n\t\t\t\t\tthis.installSection.classList.remove('hidden');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thideInstallButton() {\n\t\t\t\tif (this.installSection) {\n\t\t\t\t\tthis.installSection.classList.add('hidden');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tasync installPWA() {\n\t\t\t\tif (!this.deferredPrompt) {\n\t\t\t\t\t// For Firefox or when beforeinstallprompt is not available\n\t\t\t\t\tconst isFirefox = navigator.userAgent.toLowerCase().includes('firefox');\n\t\t\t\t\tif (isFirefox) {\n\t\t\t\t\t\tthis.showFirefoxInstallInstructions();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log('No deferred prompt available');\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Show the install prompt\n\t\t\t\tthis.deferredPrompt.prompt();\n\t\t\t\t\n\t\t\t\t// Wait for the user to respond to the prompt\n\t\t\t\tconst { outcome } = await this.deferredPrompt.userChoice;\n\t\t\t\tconsole.log(`User response to the install prompt: ${outcome}`);\n\t\t\t\t\n\t\t\t\tif (outcome === 'accepted') {\n\t\t\t\t\tconsole.log('User accepted the install prompt');\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('User dismissed the install prompt');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Clear the deferredPrompt\n\t\t\t\tthis.deferredPrompt = null;\n\t\t\t\tthis.hideInstallButton();\n\t\t\t}\n\n\t\t\tshowUpdateNotification() {\n\t\t\t\t// Show a notification that an update is available\n\t\t\t\tconst notification = document.createElement('div');\n\t\t\t\tnotification.className = 'fixed top-4 right-4 bg-green-600 text-white px-4 py-2 rounded-lg shadow-lg z-50';\n\t\t\t\tnotification.innerHTML = `\n\t\t\t\t\t<div class=\"flex items-center space-x-2\">\n\t\t\t\t\t\t<svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"></path>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t<span>App updated! Refresh to apply.</span>\n\t\t\t\t\t\t<button onclick=\"window.location.reload()\" class=\"ml-2 underline\">Refresh</button>\n\t\t\t\t\t</div>\n\t\t\t\t`;\n\t\t\t\t\n\t\t\t\tdocument.body.appendChild(notification);\n\t\t\t\t\n\t\t\t\t// Auto-remove after 10 seconds\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (notification.parentNode) {\n\t\t\t\t\t\tnotification.parentNode.removeChild(notification);\n\t\t\t\t\t}\n\t\t\t\t}, 10000);\n\t\t\t}\n\n\t\t\tshowFirefoxInstallInstructions() {\n\t\t\t\t// Create a notification with Firefox-specific install instructions\n\t\t\t\tconst notification = document.createElement('div');\n\t\t\t\tnotification.id = 'firefox-install-instructions';\n\t\t\t\tnotification.className = 'fixed bottom-4 right-4 max-w-sm bg-blue-600 text-white p-4 rounded-lg shadow-lg z-50';\n\t\t\t\tnotification.innerHTML = `\n\t\t\t\t\t<div class=\"space-y-2\">\n\t\t\t\t\t\t<div class=\"flex items-center justify-between\">\n\t\t\t\t\t\t\t<div class=\"flex items-center space-x-2\">\n\t\t\t\t\t\t\t\t<svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z\"></path>\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t<span class=\"font-medium\">Install App</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button onclick=\"this.parentElement.parentElement.parentElement.remove()\" class=\"text-white/80 hover:text-white\">\n\t\t\t\t\t\t\t\t<svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n\t\t\t\t\t\t\t\t\t<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<p class=\"text-sm\">Firefox: Tap the menu (â‹®) and look for \"Install\" or \"Add to Home Screen\"</p>\n\t\t\t\t\t</div>\n\t\t\t\t`;\n\t\t\t\t\n\t\t\t\tdocument.body.appendChild(notification);\n\t\t\t\t\n\t\t\t\t// Auto-remove after 15 seconds\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (notification.parentNode) {\n\t\t\t\t\t\tnotification.parentNode.removeChild(notification);\n\t\t\t\t\t}\n\t\t\t\t}, 15000);\n\t\t\t}\n\t\t}\n\n\t\t// Initialize PWA installer when DOM is loaded\n\t\tdocument.addEventListener('DOMContentLoaded', () => {\n\t\t\tnew PWAInstaller();\n\t\t});\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
